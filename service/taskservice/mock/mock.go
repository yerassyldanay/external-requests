// Code generated by MockGen. DO NOT EDIT.
// Source: ./service/taskservice/interface.go

// Package mock_taskservice is a generated GoMock package.
package mock_taskservice

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	taskservice "github.com/yerassyldanay/requestmaker/service/taskservice"
)

// MockTaskHandler is a mock of TaskHandler interface.
type MockTaskHandler struct {
	ctrl     *gomock.Controller
	recorder *MockTaskHandlerMockRecorder
}

// MockTaskHandlerMockRecorder is the mock recorder for MockTaskHandler.
type MockTaskHandlerMockRecorder struct {
	mock *MockTaskHandler
}

// NewMockTaskHandler creates a new mock instance.
func NewMockTaskHandler(ctrl *gomock.Controller) *MockTaskHandler {
	mock := &MockTaskHandler{ctrl: ctrl}
	mock.recorder = &MockTaskHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaskHandler) EXPECT() *MockTaskHandlerMockRecorder {
	return m.recorder
}

// GetByID mocks base method.
func (m *MockTaskHandler) GetByID(ctx context.Context, args taskservice.ParamGetByID) (taskservice.ResponseGetByID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, args)
	ret0, _ := ret[0].(taskservice.ResponseGetByID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockTaskHandlerMockRecorder) GetByID(ctx, args interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockTaskHandler)(nil).GetByID), ctx, args)
}

// Handle mocks base method.
func (m *MockTaskHandler) Handle(ctx context.Context, args taskservice.ParamsHandle) (taskservice.ResponseHandle, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Handle", ctx, args)
	ret0, _ := ret[0].(taskservice.ResponseHandle)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Handle indicates an expected call of Handle.
func (mr *MockTaskHandlerMockRecorder) Handle(ctx, args interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Handle", reflect.TypeOf((*MockTaskHandler)(nil).Handle), ctx, args)
}
